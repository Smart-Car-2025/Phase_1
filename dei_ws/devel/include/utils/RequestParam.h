// Generated by gencpp from file utils/RequestParam.msg
// DO NOT EDIT!


#ifndef UTILS_MESSAGE_REQUESTPARAM_H
#define UTILS_MESSAGE_REQUESTPARAM_H

#include <ros/service_traits.h>


#include <utils/RequestParamRequest.h>
#include <utils/RequestParamResponse.h>


namespace utils
{

struct RequestParam
{

typedef RequestParamRequest Request;
typedef RequestParamResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RequestParam
} // namespace utils


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::utils::RequestParam > {
  static const char* value()
  {
    return "d7a0c2be00c9fd03cc69f2863de9c4d9";
  }

  static const char* value(const ::utils::RequestParam&) { return value(); }
};

template<>
struct DataType< ::utils::RequestParam > {
  static const char* value()
  {
    return "utils/RequestParam";
  }

  static const char* value(const ::utils::RequestParam&) { return value(); }
};


// service_traits::MD5Sum< ::utils::RequestParamRequest> should match
// service_traits::MD5Sum< ::utils::RequestParam >
template<>
struct MD5Sum< ::utils::RequestParamRequest>
{
  static const char* value()
  {
    return MD5Sum< ::utils::RequestParam >::value();
  }
  static const char* value(const ::utils::RequestParamRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::utils::RequestParamRequest> should match
// service_traits::DataType< ::utils::RequestParam >
template<>
struct DataType< ::utils::RequestParamRequest>
{
  static const char* value()
  {
    return DataType< ::utils::RequestParam >::value();
  }
  static const char* value(const ::utils::RequestParamRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::utils::RequestParamResponse> should match
// service_traits::MD5Sum< ::utils::RequestParam >
template<>
struct MD5Sum< ::utils::RequestParamResponse>
{
  static const char* value()
  {
    return MD5Sum< ::utils::RequestParam >::value();
  }
  static const char* value(const ::utils::RequestParamResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::utils::RequestParamResponse> should match
// service_traits::DataType< ::utils::RequestParam >
template<>
struct DataType< ::utils::RequestParamResponse>
{
  static const char* value()
  {
    return DataType< ::utils::RequestParam >::value();
  }
  static const char* value(const ::utils::RequestParamResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // UTILS_MESSAGE_REQUESTPARAM_H
